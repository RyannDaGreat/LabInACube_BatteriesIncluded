{"ast":null,"code":"import _objectSpread from \"/Users/Ryan/Desktop/CleanCode/SBU/LabInACube/Lab-In-A-Cube/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/Ryan/Desktop/CleanCode/SBU/LabInACube/Lab-In-A-Cube/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Ryan/Desktop/CleanCode/SBU/LabInACube/Lab-In-A-Cube/src/index.js\";\nimport MaterialButton from '@material-ui/core/Button';\nimport Input from '@material-ui/core/Input';\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport Select from 'react-select';\nimport Switch from '@material-ui/core/Switch';\nimport TextField from '@material-ui/core/TextField';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport Typography from '@material-ui/core/Typography';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nwindow.allItemTypesContainingStructure = function (structure) {\n  const out = [];\n  console.assert(arguments.length === 1, 'Wrong number of arguments'); // window.assert.isPureObject(structure)\n\n  for (const _ref of Object.entries(window.getItemSchemas())) {\n    var _ref2 = _slicedToArray(_ref, 2);\n\n    const itemType = _ref2[0];\n    const itemSchema = _ref2[1];\n\n    if (window.containsStructure(itemSchema, structure)) {\n      out.push(itemType);\n    }\n  }\n\n  return out;\n};\n\nwindow.allItemIdsOfType = function (type) {\n  const out = [];\n  console.assert(arguments.length === 1, 'Wrong number of arguments'); // window.assert.isString(type)\n\n  for (const _ref3 of Object.entries(window.config.items)) {\n    var _ref4 = _slicedToArray(_ref3, 2);\n\n    const _id = _ref4[0];\n    const _type = _ref4[1];\n\n    if (type === _type) {\n      out.push(_id);\n    }\n  }\n\n  return out;\n};\n\nwindow.allItemIdsContainingStructure = function (structure) {\n  let out = [];\n  console.assert(arguments.length === 1, 'Wrong number of arguments'); // window.assert.isPureObject(structure)\n\n  const types = window.allItemTypesContainingStructure(structure);\n\n  for (const type of types) {\n    const itemIds = window.allItemIdsOfType(type);\n    out = [...out, ...itemIds];\n  }\n\n  return out;\n};\n\nwindow.allItemIdsWithTransform = function () {\n  //Return all item ids with full position, rotation, and\n  return window.allItemIdsContainingStructure({\n    transform: {}\n  });\n};\n\nfunction Multiplexer({\n  schema\n}) {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        selectedOption = _useState2[0],\n        setSelectedOption = _useState2[1];\n\n  if (!schema) return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  });\n  const options = Object.keys(schema).map(key => ({\n    value: key,\n    label: key\n  }));\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Select, {\n    style: {\n      width: '100%'\n    },\n    value: {\n      label: selectedOption\n    },\n    onChange: x => setSelectedOption(x.value),\n    options: options,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      width: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"table\", {\n    style: {\n      width: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    style: {\n      width: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    style: {\n      width: '10px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(\"td\", {\n    style: {\n      width: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(Schema, {\n    schema: schema[selectedOption],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  })))))));\n}\n\nfunction StringInput({\n  schema\n}) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, schema);\n}\n\nfunction isLeaf(schema) {\n  if (typeof schema !== 'object') return 'type';\n\n  for (const _ref5 of Object.entries(schema)) {\n    var _ref6 = _slicedToArray(_ref5, 2);\n\n    const index = _ref6[0];\n    const value = _ref6[1];\n\n    if (typeof value === 'string') {\n      console.assert('type' in schema);\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction addItemDialogs() {\n  function itemDialog() {\n    const value = prompt(\"Enter the new item name:\");\n    if (!value) return alert('Canceled adding item');else if (value in window.config.items) {\n      alert('Sorry, that names already taken! Try another one...');\n      return itemDialog();\n    }\n    return value;\n  }\n\n  function typeDialog() {\n    const value = prompt(\"Enter the new item type! Please choose from: \" + Object.keys(window.getItemSchemas()));\n    if (!value) return alert('Canceled adding item');else if (!(value in window.getItemSchemas())) {\n      alert('Sorry, thats not a module type! Please choose from: ' + Object.keys(window.getItemSchemas()));\n      return typeDialog();\n    }\n    return value;\n  }\n\n  const name = itemDialog();\n  if (!name) return;\n  const type = typeDialog();\n  if (!type) return;\n  alert(\"Success! Added item. Please refresh the page to see changes.\");\n  window.addLinesToConfigString('items\t' + name + ' ' + type);\n  window.refreshPage();\n}\n\nfunction deltaDialog(description = \"\") {\n  const value = prompt(description + '\\n' + \"Enter the new delta name:\");\n  if (!value) return alert('Canceled adding delta');else if (value in window.config.deltas) {\n    alert('Sorry, that names already taken! Try another one...');\n    return deltaDialog();\n  }\n  return value;\n}\n\nfunction addDeltaDialog() {\n  const d = deltaDialog();\n  if (!d) return;\n  alert(\"Success! Added delta. You will now see it in the top dropdown menu.\");\n  window.addLinesToConfigString('deltas\t' + d);\n  window.refreshGuiSchema();\n}\n\nfunction Schema({\n  schema\n}) {\n  if (!schema) return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  });\n\n  if (isLeaf(schema)) {\n    return React.createElement(LeafModifier, {\n      schema: schema,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    });\n  } else {\n    return React.createElement(Multiplexer, {\n      schema: schema,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    });\n  }\n}\n\nfunction TextInput({\n  value,\n  setValue\n}) {\n  return React.createElement(Input, {\n    value: value,\n    onChange: event => {\n      setValue(event.target.value);\n    } // className={classes.input}\n    ,\n    inputProps: {\n      'aria-label': 'Description'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  });\n}\n\nfunction NumberInput({\n  value,\n  setValue,\n  step = .1\n}) {\n  return React.createElement(TextField, {\n    type: \"number\",\n    value: value,\n    inputProps: {\n      /*min: \"0\", max: \"10\",*/\n      step: step\n    },\n    onChange: event => {\n      setValue(event.target.value);\n    } // className={classes.input}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  });\n}\n\nfunction SelectInput({\n  value,\n  setValue,\n  values = []\n}) {\n  return React.createElement(Select, {\n    value: {\n      label: value\n    },\n    onChange: x => setValue(x.value),\n    options: values.map(key => ({\n      value: key,\n      label: key\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  });\n}\n\nfunction BooleanInput({\n  value,\n  setValue\n}) {\n  return React.createElement(Switch, {\n    checked: Boolean(value),\n    onChange: event => setValue(event.target.checked),\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  });\n}\n\nfunction LeafModifier({\n  schema\n}) {\n  let onClick = function () {\n    const value = prompt(\"Enter the new value:\");\n    if (value == null) return; //Canceled\n    else {\n        schema.set(value);\n      }\n  };\n\n  const checked = schema.config !== undefined; // alert(\"ASOIJD\")\n\n  let input = React.createElement(TextInput, {\n    value: schema.config,\n    setValue: schema.set,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238\n    },\n    __self: this\n  });\n\n  if (schema.type === 'string') {\n    input = input; //Default: text input\n  } else if (schema.type === 'boolean') {\n    input = React.createElement(BooleanInput, {\n      value: schema.config,\n      setValue: schema.set,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    });\n  } else if (schema.type === 'number') {\n    input = React.createElement(NumberInput, {\n      value: schema.config,\n      setValue: schema.set,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    });\n  } else if (schema.type === 'select') {\n    input = React.createElement(SelectInput, {\n      value: schema.config,\n      values: schema.values,\n      setValue: schema.set,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    });\n  }\n\n  console.assert(input !== undefined);\n  return React.createElement(\"div\", {\n    style: {\n      padding: 20,\n      paddingTop: 10,\n      backgroundColor: 'rgba(255,255,255,.5)',\n      borderRadius: 30,\n      alignContent: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    checked: checked,\n    disabled: schema.path[0] === 'initial',\n    onChange: event => {\n      const checked = event.target.checked;\n      if (checked)\n        /*alert(schema.state+'  '+schema.config)*/\n        schema.set(checked ? schema.state : null);\n    } //if(!checked){schema.set(undefined)}else{console.assert(checked);setUsed(checked)}}}\n    ,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257\n    },\n    __self: this\n  }), checked ? \"(In delta)\" : \"(Not in delta)\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267\n    },\n    __self: this\n  }), checked ? input : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268\n    },\n    __self: this\n  })); //\t\t   <Button\n  //\tvariant=\"contained\" onClick={onClick}\n  //\tsize=\"small\"\n  //\t\t   >{'State: '+schema.state+'\\tConfig: '+schema.config/*schema.path+''*/}</Button>\n}\n\nlet oldStuff = undefined;\nsetInterval(window.tryRefreshInstance, 100);\n\nfunction tryRefreshInstance() {\n  if (window.refreshInstance) window.refreshInstance();\n}\n\nwindow.refreshInstance = undefined;\n\nfunction GetSimpleGui() {\n  const labels = [];\n\n  let _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      instance = _useState4[0],\n      setInstance = _useState4[1];\n\n  window.refreshInstance = () => setInstance(window.getGuiArchitectureInstance());\n\n  timerEvents[0] = () => {\n    let stuff = window.gameWindow.getGuiArchitectureInstance.apply(window.gameWindow, [window.gameWindow.config]);\n\n    if (stuff !== oldStuff) {\n      setInstance(stuff);\n      oldStuff = stuff;\n    }\n  }; //This function is inefficient. It must be cleaned up asap. (it lists all possible controls...which is just STUPID (but also very easy to make))\n\n\n  for (const _ref7 of Object.entries(instance)) {\n    var _ref8 = _slicedToArray(_ref7, 2);\n\n    const index = _ref8[0];\n    const i = _ref8[1];\n\n    if (i.path.includes('color')) {\n      let onClick = function () {\n        const value = prompt(\"Enter the new value for \" + i.path.join(' ') + '\\n\\n at delta ' + i.delta + '\\n\\nCurrent Value: ' + i.valueInConfig);\n        if (value == null) return; //Canceled\n        else {\n            let configString = localStorage.getItem('config');\n            configString += '\\n' + 'deltas\t' + i.delta + '\t' + i.path.join('\t') + ' ' + value;\n            window.gameWindow.setConfigDjsonInLocalStorage(configString);\n          }\n      };\n\n      let color = i.valueInConfig === undefined ? \"primary\" : \"secondary\";\n      labels.push(React.createElement(Button, {\n        key: index,\n        variant: \"contained\",\n        onClick: onClick,\n        size: \"small\",\n        color: color,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, 'deltas ' + i.delta + ' ' + i.path.join(' ')));\n    }\n  }\n\n  return React.createElement(\"table\", {\n    style: {\n      flexGrow: 4,\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327\n    },\n    __self: this\n  }, labels);\n}\n\nfunction handleNewLab() {\n  if (window.confirm('Are you sure you want to create a new lab (all progress will be lost)?')) {\n    window.setConfigDjsonInLocalStorage('');\n    window.refreshPage();\n  }\n}\n\nwindow.gameWindow = undefined; //Will be set to the 'window' element of the 'game.html' iframe\n\nconst timerEvents = [() => {}]; //Calls each one of these on a timer\n\nfunction doTimerEvents() {\n  if (window.gameWindow !== undefined) //We're not ready yet: the game iframe has to finish loading first\n    {\n      console.log(\"HO\");\n      window.gameWindow.editorMode = true;\n\n      for (const event of timerEvents) event();\n    }\n}\n\nsetInterval(doTimerEvents, 100);\n\nfunction handleLoadConfig(kwargs = {}) {\n  const _kwargs$concat = kwargs.concat,\n        concat = _kwargs$concat === void 0 ? false : _kwargs$concat;\n  const code = prompt('Please enter the 4 character code (case-sensitive) that you received when pressing \"Save Config\"');\n\n  if (typeof code === 'string' && code.length === 4) {\n    window.loadConfigFromServer(code, {\n      concat\n    });\n  } else if (!code) {\n    alert('Loading config from server cancelled.');\n  } else {\n    alert('Please enter a four character code (you entered ' + JSON.stringify(code) + ', which has ' + code.length + ' characters)');\n    handleLoadConfig();\n  }\n}\n\nfunction viewMySaves() {\n  const saves = window.getMySaves();\n  if (!saves.length) window.alert('You currently have no saved labs.');else window.alert(\"All of your saved file codes (bottom is most recent):\" + '\\n' + saves.join('\\n'));\n}\n\nfunction handleEditCode() {\n  if (!__weAreInAnIframe__) //We are in an iframe\n    {\n      if (window.confirm('Are you sure you want to go to the code editor? (This option exists for mainly devs, such as Ryan Jenny and Rong)')) {\n        window.goToUrl('../Editor/index.html');\n      }\n    } else {\n    alert('You\\'re already in the code editor.');\n  }\n}\n\nfunction handleHideEditorGui() {\n  if (window.confirm('Are you sure you want to hide to the editor gui? (This will bring you to game.html)')) {\n    window.goToUrl('../game.html');\n  }\n} //PART OF TODO TO MAKE LABS LOADABLE VIA URL\n// if(window.location.pathname.length=5)//In other words, if we have some 5 letter code\n\n\nasync function selectionDialog(promptText, selection) {\n  //Will be replaced by HTML or something later\n  console.assert(selection.length);\n  console.assert(arguments.length === 2, 'Wrong number of arguments');\n  let out = prompt(promptText + '\\nPlease choose from these options (case sensitive):\\n' + selection);\n  if (selection.includes(out)) return out;\n  if (!out) return undefined;\n  return selectionDialog(promptText, selection);\n}\n\nasync function conditionedInputDialog(promptText, instructionText, condition, conditionFailMessage = \"Bad input, please try again!\", cancelMessage = \"Cancelled input.\") {\n  //TODO rewrite selectionDialog to use this function. this is copypasta trash.\n  //condition is a boolean function that takes a user input string\n  //An input that has to match a condition\n  //Will be replaced by HTML or something later\n  console.assert(arguments.length >= 3, 'Wrong number of arguments');\n  let out = prompt(promptText + '\\n' + instructionText);\n\n  if (!out) {\n    alert(cancelMessage);\n    return undefined; //user cancelled\n  }\n\n  if (condition(out)) {\n    return out;\n  } else {\n    alert(conditionFailMessage);\n    return conditionedInputDialog(promptText, instructionText, condition, conditionFailMessage, cancelMessage);\n  }\n}\n\nwindow.numbericInputDialog = async function (message, min = -1 / 0, max = 1 / 0) //In javascript, 1/0 is positive infinity. -1/0 is negative infinity. Screw calculus, this is JS! (Sigh. At least I found a use for it?!)\n{\n  function condition(input) {\n    try {\n      input = JSON.parse(input);\n      return typeof input === 'number' && input <= max && input >= min;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  return await conditionedInputDialog(message, \"Please enter any number between \" + min + \" and \" + max, condition);\n};\n\nfunction displayHelp(help) {\n  alert(help);\n}\n\nfunction Button(props) {\n  let out = React.createElement(MaterialButton, Object.assign({\n    style: {\n      margin: 1,\n      fontWeight: 'bold'\n    },\n    variant: \"contained\",\n    size: \"small\"\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473\n    },\n    __self: this\n  }), props.children);\n\n  if (props.helpLabel || props.helptext) {\n    let extraProps = {};\n\n    if (props.helptext) {\n      extraProps.onClick = () => displayHelp(props.helptext);\n    }\n\n    let title = React.createElement(\"div\", Object.assign({\n      style: {\n        cursor: \"help\"\n      }\n    }, extraProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 486\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487\n      },\n      __self: this\n    }, props.helpLabel || \"Help\"));\n    out = React.createElement(Tooltip, {\n      title: title,\n      placement: \"right\",\n      interactive: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491\n      },\n      __self: this\n    }, out);\n  }\n\n  return out;\n}\n\nconst tools = {\n  async pour() {\n    const firstItemID = await selectionDialog(\"Which item would you like to pour stuff from?\", window.allItemIdsWithTransform());\n    const secondItemID = await selectionDialog(\"Which item would you like to pour stuff into?\", window.allItemIdsWithTransform());\n    const pourDeltas_prefix = deltaDialog(\"What should the new animation sequence be called?\").trim();\n    alert(\"Implement pouring from \" + firstItemID + \" to \" + secondItemID);\n    let originalFirstItemRotation = window.deltas.soaked(window.items[firstItemID], {\n      transform: {\n        rotation: {\n          /*x: null, y: null, */\n          z: null\n        }\n      }\n    });\n    let originalFirstItemPosition = window.deltas.soaked(window.items[firstItemID], {\n      transform: {\n        position: {\n          x: null,\n          y: null,\n          z: null\n        }\n      }\n    });\n    let firstItemRotation = window.deltas.soaked(window.items[firstItemID], {\n      transform: {\n        rotation: {\n          /*x: null, y: null,*/\n          z: null\n        }\n      }\n    }); //For the pouring delta\n\n    let secondItemPosition = window.deltas.soaked(window.items[secondItemID], {\n      transform: {\n        position: {\n          x: null,\n          y: null,\n          z: null\n        }\n      }\n    }); //For the pouring delta\n\n    secondItemPosition.transform.position.y += 2;\n    firstItemRotation.transform.rotation.z += 180;\n    let pourDeltas_pick_up = pourDeltas_prefix + '_0_pick_up'.trim(); //Trim just in case I put a space on the end by accident...\n\n    let pourDeltas_move_to_target = pourDeltas_prefix + '_1_move_to_target'.trim(); //Trim just in case I put a space on the end by accident...\n\n    let pourDeltas_rotate = pourDeltas_prefix + '_2_rotate'.trim(); //Trim just in case I put a space on the end by accident...\n\n    let pourDeltas_rotate_back = pourDeltas_prefix + '_3_rotate_back'.trim(); //Trim just in case I put a space on the end by accident...\n\n    let pourDeltas_move_back = pourDeltas_prefix + '_4_move_back'.trim(); //Trim just in case I put a space on the end by accident...\n\n    let pourDeltas_put_down = pourDeltas_prefix + '_5_put_down'.trim(); //Trim just in case I put a space on the end by accident...\n\n    function autoTo(deltaId) {\n      return {\n        scene: {\n          transitions: {\n            auto: {\n              delta: deltaId,\n              time: 1\n            }\n          }\n        }\n      };\n    }\n\n    window.addLinesToConfigString(window.djson.stringify({\n      \"\": \"Pouring \" + firstItemID + \" to \" + secondItemID + \" via delta \" + pourDeltas_prefix,\n      //A comment\n      deltas: {\n        [window.getMostRecentDeltaId()]: {\n          // scene:{transitions:{drag:{[firstItem]:{[secondItem]:{delta:pourDeltas_pick_up,time:1}}}}}\n          scene: {\n            transitions: {\n              drag: {\n                [firstItemID]: {\n                  [secondItemID]: {\n                    delta: pourDeltas_move_to_target,\n                    time: 1\n                  }\n                }\n              }\n            }\n          }\n        },\n        // [pourDeltas_pick_up]: {\n        // \t[firstItem]: {transform:{position:{y:secondItemPosition.transform.position.y}}},\n        // \t...autoTo(pourDeltas_move_to_target)\n        // },\n        [pourDeltas_move_to_target]: _objectSpread({\n          [firstItemID]: secondItemPosition\n        }, autoTo(pourDeltas_rotate)),\n        [pourDeltas_rotate]: _objectSpread({\n          [firstItemID]: firstItemRotation\n        }, autoTo(pourDeltas_rotate_back)),\n        [pourDeltas_rotate_back]: _objectSpread({\n          [firstItemID]: originalFirstItemRotation\n        }, autoTo(pourDeltas_put_down)),\n        // [pourDeltas_move_back]: {\n        // \t[firstItem]: {transform:{position:{x:originalFirstItemPosition.transform.position.x,\n        // \t\t\t\t                       z:originalFirstItemPosition.transform.position.z}}},\n        // \t...autoTo(pourDeltas_put_down)\n        // },\n        [pourDeltas_put_down]: {\n          [firstItemID]: originalFirstItemPosition\n        }\n      }\n    }));\n  },\n\n  async beakerPour() {\n    const firstItemID = await selectionDialog(\"Which item would you like to pour stuff from?\", window.allItemIdsOfType('simpleBeaker'));\n    const secondItemID = await selectionDialog(\"Which item would you like to pour stuff into?\", window.allItemIdsOfType('simpleBeaker'));\n    const pourDeltas_prefix = deltaDialog(\"What should the new animation sequence be called?\").trim();\n    const pourPercent = numbericInputDialog(\"What percent of \" + firstItemID + \"'s fluid should we pour?\", 0, 100);\n    alert(\"Implement pouring from \" + firstItemID + \" to \" + secondItemID);\n    let originalFirstItemRotation = window.deltas.soaked(window.items[firstItemID], {\n      transform: {\n        rotation: {\n          /*x: null, y: null, */\n          z: null\n        }\n      }\n    });\n    let originalFirstItemPosition = window.deltas.soaked(window.items[firstItemID], {\n      transform: {\n        position: {\n          x: null,\n          y: null,\n          z: null\n        }\n      }\n    });\n    let firstItemRotation = window.deltas.soaked(window.items[firstItemID], {\n      transform: {\n        rotation: {\n          /*x: null, y: null,*/\n          z: null\n        }\n      }\n    }); //For the pouring delta\n\n    let secondItemPosition = window.deltas.soaked(window.items[secondItemID], {\n      transform: {\n        position: {\n          x: null,\n          y: null,\n          z: null\n        }\n      }\n    }); //For the pouring delta\n    // let firstFluidLevel=window.deltas.soaked(window.items[secondItem], {fluid:{transform: {position: {x: null, y: null, z: null}}}})//For the pouring delta\n\n    let firstFluidScaleY = window.items[firstItemID].fluid.transform.scale.y; //A number\n\n    let secondFluidScaleY = window.items[secondItemID].fluid.transform.scale.y; //A number\n\n    let firstFluidScaleX = window.items[firstItemID].fluid.transform.scale.x; //A number\n\n    let secondFluidScaleX = window.items[secondItemID].fluid.transform.scale.x; //A number\n\n    let firstFluidScaleZ = window.items[firstItemID].fluid.transform.scale.z; //A number\n\n    let secondFluidScaleZ = window.items[secondItemID].fluid.transform.scale.z; //A number\n\n    let firstFluidVolume = firstFluidScaleY * firstFluidScaleX * firstFluidScaleZ; //Forget pi its not important\n\n    let secondFluidVolume = firstFluidScaleY * firstFluidScaleX * firstFluidScaleZ; //Forget pi its not important\n\n    let changeInLevels = pourPercent / 100 * firstFluidScaleY;\n    firstFluidScaleY -= changeInLevels;\n    secondFluidScaleY += changeInLevels;\n    secondItemPosition.transform.position.y += 2;\n    firstItemRotation.transform.rotation.z += 180;\n    let pourDeltas_pick_up = pourDeltas_prefix + '_0_pick_up'.trim(); //Trim just in case I put a space on the end by accident...\n\n    let pourDeltas_move_to_target = pourDeltas_prefix + '_1_move_to_target'.trim(); //Trim just in case I put a space on the end by accident...\n\n    let pourDeltas_rotate = pourDeltas_prefix + '_2_rotate'.trim(); //Trim just in case I put a space on the end by accident...\n\n    let pourDeltas_fluid_exchange = pourDeltas_prefix + '_2_fluid_exchange'.trim(); //Trim just in case I put a space on the end by accident...\n\n    let pourDeltas_rotate_back = pourDeltas_prefix + '_3_rotate_back'.trim(); //Trim just in case I put a space on the end by accident...\n\n    let pourDeltas_move_back = pourDeltas_prefix + '_4_move_back'.trim(); //Trim just in case I put a space on the end by accident...\n\n    let pourDeltas_put_down = pourDeltas_prefix + '_5_put_down'.trim(); //Trim just in case I put a space on the end by accident...\n\n    function autoTo(deltaId) {\n      return {\n        scene: {\n          transitions: {\n            auto: {\n              delta: deltaId,\n              time: 1\n            }\n          }\n        }\n      };\n    }\n\n    window.addLinesToConfigString(window.djson.stringify({\n      \"\": \"Pouring \" + firstItemID + \" to \" + secondItemID + \" via delta \" + pourDeltas_prefix,\n      //A comment\n      deltas: {\n        [window.getMostRecentDeltaId()]: {\n          // scene:{transitions:{drag:{[firstItem]:{[secondItem]:{delta:pourDeltas_pick_up,time:1}}}}}\n          scene: {\n            transitions: {\n              drag: {\n                [firstItemID]: {\n                  [secondItemID]: {\n                    delta: pourDeltas_move_to_target,\n                    time: 1\n                  }\n                }\n              }\n            }\n          }\n        },\n        // [pourDeltas_pick_up]: {\n        // \t[firstItem]: {transform:{position:{y:secondItemPosition.transform.position.y}}},\n        // \t...autoTo(pourDeltas_move_to_target)\n        // },\n        [pourDeltas_move_to_target]: _objectSpread({\n          [firstItemID]: secondItemPosition\n        }, autoTo(pourDeltas_rotate)),\n        [pourDeltas_rotate]: _objectSpread({\n          [firstItemID]: {\n            fluid: {\n              transform: {\n                scale: {\n                  y: firstFluidScaleY\n                }\n              }\n            }\n          },\n          [secondItemID]: {\n            fluid: {\n              transform: {\n                scale: {\n                  y: secondFluidScaleY\n                }\n              }\n            }\n          }\n        }, autoTo(pourDeltas_fluid_exchange)),\n        [pourDeltas_fluid_exchange]: _objectSpread({\n          [firstItemID]: firstItemRotation\n        }, autoTo(pourDeltas_rotate_back)),\n        [pourDeltas_rotate_back]: _objectSpread({\n          [firstItemID]: originalFirstItemRotation\n        }, autoTo(pourDeltas_put_down)),\n        // [pourDeltas_move_back]: {\n        // \t[firstItem]: {transform:{position:{x:originalFirstItemPosition.transform.position.x,\n        // \t\t\t\t                       z:originalFirstItemPosition.transform.position.z}}},\n        // \t...autoTo(pourDeltas_put_down)\n        // },\n        [pourDeltas_put_down]: {\n          [firstItemID]: originalFirstItemPosition\n        }\n      }\n    }));\n  }\n\n};\n\nfunction toolsDialog() {\n  async function toolsDialog() {\n    const selectedTool = tools[(await selectionDialog(\"Select a tool\", Object.keys(tools)))];\n\n    if (selectedTool) {\n      selectedTool();\n    } else {\n      alert(\"Cancelled using a tool\");\n    }\n  }\n\n  toolsDialog();\n}\n\nfunction viewState() {\n  alert(\"Current state:\\n\" + window.getSimplifiedStateDeltaStack());\n}\n\nfunction handlePopState() {\n  // viewState()\n  let simplifiedStateDeltaStack = window.getSimplifiedStateDeltaStack();\n\n  if (window.confirm(\"Would you like to pop \" + simplifiedStateDeltaStack[simplifiedStateDeltaStack.length - 1] + \" from the state stack?\\nCurrent state: \" + simplifiedStateDeltaStack)) {\n    window.popDeltaIDFromStateStack();\n    window.setStateFromDeltaIDArray(window.getSimplifiedStateDeltaStack());\n    window.requestRender();\n  }\n}\n\nfunction handlePushState() {\n  async function helper() {\n    // viewState()\n    let simplifiedStateDeltaStack = window.getSimplifiedStateDeltaStack();\n    let deltaID = await selectionDialog(\"Select a delta to push to the state:\", Object.keys(window.config.deltas));\n\n    if (!deltaID) {\n      alert(\"Cancelled pushing delta to state\");\n      return;\n    }\n\n    window.pushDeltaIDToStateStack(deltaID);\n    window.setStateFromDeltaIDArray(window.getSimplifiedStateDeltaStack());\n    window.requestRender();\n  }\n\n  helper();\n}\n\nconst __weAreInAnIframe__ = window.location !== window.parent.location;\n\nfunction App() {\n  function setGameWindow(x) {\n    window.gameWindow = x.contentWindow;\n  } //Lab\n\n\n  const _useState5 = useState(window.getDeltasGuiSchema()),\n        _useState6 = _slicedToArray(_useState5, 2),\n        schema = _useState6[0],\n        setSchema = _useState6[1];\n\n  window.refreshGuiSchema = () => setSchema(window.getDeltasGuiSchema());\n\n  let gameStyle = {\n    width: '100%',\n    height: '100%',\n    border: '0' // noinspection HtmlUnknownTarget\n\n  };\n  return React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'horizontal',\n      width: '25%',\n      height: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 712\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      padding: 10,\n      border: 10,\n      backgroundColor: 'rgba(255,255,255,.3)',\n      flexGrow: 4,\n      display: 'flex',\n      flexDirection: 'column',\n      overflowY: 'scroll',\n      pointerEvents: 'auto'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 713\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    style: {\n      color: 'white',\n      textAlign: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 714\n    },\n    __self: this\n  }, \"Lab\", React.createElement(\"sup\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 714\n    },\n    __self: this\n  }, \"3\")), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 715\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: handleEditCode,\n    helptext: \"Edit the djson code manually (this is meant for devs)\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 726\n    },\n    __self: this\n  }, \" Edit Djson Code \"), React.createElement(Button, {\n    onClick: handleHideEditorGui,\n    helptext: \"Hide this settings bar, and make the game full-screen. Hit the back button on your browser put it back again.\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 727\n    },\n    __self: this\n  }, \" Hide Editor Gui \"), React.createElement(Button, {\n    color: \"secondary\",\n    onClick: handleNewLab,\n    helptext: \"Wipe all settings for this lab and start a new one.\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 728\n    },\n    __self: this\n  }, \" New Lab         \"), React.createElement(Button, {\n    color: \"secondary\",\n    onClick: () => window.saveConfigToServer(),\n    helptext: \"Save this lab's settings to the server (you'll get a four letter/number code, which you can find later by clicking 'View Saved Labs')\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 729\n    },\n    __self: this\n  }, \" Save Lab        \"), React.createElement(Button, {\n    color: \"secondary\",\n    onClick: viewMySaves,\n    helptext: \"View all labs saved from this computer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 730\n    },\n    __self: this\n  }, \" View Saved Labs \"), React.createElement(Button, {\n    color: \"secondary\",\n    onClick: handleLoadConfig,\n    helptext: \"Load some game from an id (a secret four-letter/number code you get from clicking 'save lab')\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 731\n    },\n    __self: this\n  }, \" Load Lab        \"), React.createElement(Button, {\n    color: \"secondary\",\n    onClick: () => handleLoadConfig({\n      concat: true\n    }),\n    helptext: \"Combine this lab game's settings with some other lab's game settings (which you specify with a four letter/number code gotten from having clicked 'Save Lab')\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 732\n    },\n    __self: this\n  }, \" Combine Labs    \"), React.createElement(Button, {\n    color: \"primary\",\n    onClick: window.undoEditorChange,\n    helptext: \"Undo the last change you made to this game's settings.\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 733\n    },\n    __self: this\n  }, \" Undo            \"), React.createElement(Button, {\n    color: \"primary\",\n    onClick: addItemDialogs,\n    helptext: \"Add an item.\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 734\n    },\n    __self: this\n  }, \" Add Item        \"), React.createElement(Button, {\n    color: \"primary\",\n    onClick: addDeltaDialog,\n    helptext: \"Add a delta.\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 735\n    },\n    __self: this\n  }, \" Add Delta       \"), React.createElement(Button, {\n    color: \"primary\",\n    onClick: toolsDialog,\n    helptext: \"Tools let you do fancy things with little effort. Examples include pouring flasks etc.\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 736\n    },\n    __self: this\n  }, \" Tools           \"), React.createElement(Button, {\n    color: \"primary\",\n    onClick: viewState,\n    helptext: \"The game state is a list of 'deltas'. Each time you trigger a transition, you add a delta to the game state (it will be added to the end of the 'state stack', which is the list you see when pressing this button.'\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 737\n    },\n    __self: this\n  }, \" View State       \"), React.createElement(Button, {\n    color: \"primary\",\n    onClick: handlePushState,\n    helptext: \"Apply a delta to the current game state. You might want to do this while writing some delta that you haven't transitioned to yet.\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 738\n    },\n    __self: this\n  }, \" Push State       \"), React.createElement(Button, {\n    color: \"primary\",\n    onClick: handlePopState,\n    helptext: \"Go back in time by one delta (undo the last transition). You can see this change by clicking 'View State'\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 739\n    },\n    __self: this\n  }, \" Pop State       \"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 741\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      width: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 742\n    },\n    __self: this\n  }, React.createElement(Schema, {\n    schema: schema,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 743\n    },\n    __self: this\n  }))));\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", function (event) {\n  ReactDOM.render(React.createElement(App, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 750\n    },\n    __self: this\n  }), document.getElementById('root')); // Your code to run since DOM is loaded and ready\n});","map":{"version":3,"sources":["/Users/Ryan/Desktop/CleanCode/SBU/LabInACube/Lab-In-A-Cube/src/index.js"],"names":["MaterialButton","Input","React","useState","ReactDOM","Select","Switch","TextField","Tooltip","ExpansionPanelSummary","ExpansionPanel","Typography","ExpansionPanelDetails","ExpandMoreIcon","window","allItemTypesContainingStructure","structure","out","console","assert","arguments","length","Object","entries","getItemSchemas","itemType","itemSchema","containsStructure","push","allItemIdsOfType","type","config","items","_id","_type","allItemIdsContainingStructure","types","itemIds","allItemIdsWithTransform","transform","Multiplexer","schema","selectedOption","setSelectedOption","options","keys","map","key","value","label","width","x","StringInput","isLeaf","index","addItemDialogs","itemDialog","prompt","alert","typeDialog","name","addLinesToConfigString","refreshPage","deltaDialog","description","deltas","addDeltaDialog","d","refreshGuiSchema","Schema","TextInput","setValue","event","target","NumberInput","step","SelectInput","values","BooleanInput","Boolean","checked","LeafModifier","onClick","set","undefined","input","padding","paddingTop","backgroundColor","borderRadius","alignContent","path","state","oldStuff","setInterval","tryRefreshInstance","refreshInstance","GetSimpleGui","labels","instance","setInstance","getGuiArchitectureInstance","timerEvents","stuff","gameWindow","apply","i","includes","join","delta","valueInConfig","configString","localStorage","getItem","setConfigDjsonInLocalStorage","color","flexGrow","display","flexDirection","handleNewLab","confirm","doTimerEvents","log","editorMode","handleLoadConfig","kwargs","concat","code","loadConfigFromServer","JSON","stringify","viewMySaves","saves","getMySaves","handleEditCode","__weAreInAnIframe__","goToUrl","handleHideEditorGui","selectionDialog","promptText","selection","conditionedInputDialog","instructionText","condition","conditionFailMessage","cancelMessage","numbericInputDialog","message","min","max","parse","e","displayHelp","help","Button","props","margin","fontWeight","children","helpLabel","helptext","extraProps","title","cursor","tools","pour","firstItemID","secondItemID","pourDeltas_prefix","trim","originalFirstItemRotation","soaked","rotation","z","originalFirstItemPosition","position","y","firstItemRotation","secondItemPosition","pourDeltas_pick_up","pourDeltas_move_to_target","pourDeltas_rotate","pourDeltas_rotate_back","pourDeltas_move_back","pourDeltas_put_down","autoTo","deltaId","scene","transitions","auto","time","djson","getMostRecentDeltaId","drag","beakerPour","pourPercent","firstFluidScaleY","fluid","scale","secondFluidScaleY","firstFluidScaleX","secondFluidScaleX","firstFluidScaleZ","secondFluidScaleZ","firstFluidVolume","secondFluidVolume","changeInLevels","pourDeltas_fluid_exchange","toolsDialog","selectedTool","viewState","getSimplifiedStateDeltaStack","handlePopState","simplifiedStateDeltaStack","popDeltaIDFromStateStack","setStateFromDeltaIDArray","requestRender","handlePushState","helper","deltaID","pushDeltaIDToStateStack","location","parent","App","setGameWindow","contentWindow","getDeltasGuiSchema","setSchema","gameStyle","height","border","overflowY","pointerEvents","textAlign","saveConfigToServer","undoEditorChange","document","addEventListener","render","getElementById"],"mappings":"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","sourcesContent":["import MaterialButton from '@material-ui/core/Button'\nimport Input from '@material-ui/core/Input'\nimport React, {useState} from 'react'\nimport ReactDOM from 'react-dom'\nimport Select from 'react-select'\nimport Switch from '@material-ui/core/Switch'\nimport TextField from '@material-ui/core/TextField'\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary'\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel'\nimport Typography from '@material-ui/core/Typography'\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\n\nwindow.allItemTypesContainingStructure=function(structure)\n{\n\tconst out=[]\n\tconsole.assert(arguments.length===1,'Wrong number of arguments')\n\t// window.assert.isPureObject(structure)\n\tfor(const [itemType,itemSchema] of Object.entries(window.getItemSchemas()))\n\t{\n\t\tif(window.containsStructure(itemSchema,structure))\n\t\t{\n\t\t\tout.push(itemType)\n\t\t}\n\t}\n\treturn out\n}\nwindow.allItemIdsOfType=function(type)\n{\n\tconst out=[]\n\tconsole.assert(arguments.length===1,'Wrong number of arguments')\n\t// window.assert.isString(type)\n\tfor(const [_id,_type] of Object.entries(window.config.items))\n\t{\n\t\tif(type===_type)\n\t\t{\n\t\t\tout.push(_id)\n\t\t}\n\t}\n\treturn out\n}\nwindow.allItemIdsContainingStructure=function(structure)\n{\n\tlet out=[]\n\tconsole.assert(arguments.length===1,'Wrong number of arguments')\n\t// window.assert.isPureObject(structure)\n\tconst types=window.allItemTypesContainingStructure(structure)\n\tfor(const type of types)\n\t{\n\t\tconst itemIds=window.allItemIdsOfType(type)\n\t\tout=[...out,...itemIds]\n\t}\n\treturn out\n}\nwindow.allItemIdsWithTransform=function()\n{\n\t//Return all item ids with full position, rotation, and\n\treturn window.allItemIdsContainingStructure({transform:{}})\n}\n\n\nfunction Multiplexer({schema})\n{\n\tconst [selectedOption, setSelectedOption]=useState(null)\n\tif(!schema)\n\t\treturn <div></div>\n\tconst options=Object.keys(schema).map(key=>({value: key, label: key}))\n\treturn <div>\n\t\t<Select style={{width: '100%'}} value={{label: selectedOption}}\n\t\t\t\tonChange={x=>setSelectedOption(x.value)}\n\t\t\t\toptions={options}\n\t\t/>\n\t\t<div style={{width: '100%'}}>\n\t\t\t<table style={{width: '100%'}}>\n\t\t\t\t<tbody>\n\t\t\t\t<tr style={{width: '100%'}}>\n\t\t\t\t\t<td style={{width: '10px'}}>\n\t\t\t\t\t\t{}\n\t\t\t\t\t</td>\n\t\t\t\t\t<td style={{width: '100%'}}>\n\t\t\t\t\t\t<Schema schema={schema[selectedOption]}/>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\t</div>\n}\n\nfunction StringInput({schema})\n{\n\treturn <div>{schema}</div>\n}\n\nfunction isLeaf(schema)\n{\n\tif(typeof schema!=='object')\n\t\treturn 'type'\n\tfor(const [index,value] of Object.entries(schema))\n\t{\n\t\tif(typeof value==='string')\n\t\t{\n\t\t\tconsole.assert('type' in schema)\n\t\t\treturn true\n\t\t}\n\t}\n\treturn false\n}\n\nfunction addItemDialogs()\n{\n\tfunction itemDialog()\n\t{\n\t\tconst value=prompt(\"Enter the new item name:\")\n\t\tif(!value)\n\t\t\treturn alert('Canceled adding item')\n\t\telse if(value in window.config.items)\n\t\t{\n\t\t\talert('Sorry, that names already taken! Try another one...')\n\t\t\treturn itemDialog()\n\t\t}\n\t\treturn value\n\t}\n\tfunction typeDialog()\n\t{\n\t\tconst value=prompt(\"Enter the new item type! Please choose from: \"+Object.keys(window.getItemSchemas()))\n\t\tif(!value)\n\t\t\treturn alert('Canceled adding item')\n\t\telse if(!(value in (window.getItemSchemas())))\n\t\t{\n\t\t\talert('Sorry, thats not a module type! Please choose from: '+Object.keys((window.getItemSchemas())))\n\t\t\treturn typeDialog()\n\t\t}\n\t\treturn value\n\t}\n\tconst name=itemDialog()\n\tif(!name)\n\t\treturn\n\tconst type=typeDialog()\n\tif(!type)\n\t\treturn\n\talert(\"Success! Added item. Please refresh the page to see changes.\")\n\twindow.addLinesToConfigString('items\t'+name+' '+type)\n\twindow.refreshPage()\n}\n\nfunction deltaDialog(description=\"\")\n{\n\tconst value=prompt(description+'\\n'+\"Enter the new delta name:\")\n\tif(!value)\n\t\treturn alert('Canceled adding delta')\n\telse if(value in window.config.deltas)\n\t{\n\t\talert('Sorry, that names already taken! Try another one...')\n\t\treturn deltaDialog()\n\t}\n\treturn value\n}\nfunction addDeltaDialog()\n{\n\tconst d=deltaDialog()\n\tif(!d)return\n\talert(\"Success! Added delta. You will now see it in the top dropdown menu.\")\n\twindow.addLinesToConfigString('deltas\t'+d)\n\twindow.refreshGuiSchema()\n}\n\nfunction Schema({schema})\n{\n\tif(!schema)\n\t\treturn <div></div>\n\tif(isLeaf(schema))\n\t{\n\t\treturn <LeafModifier schema={schema}/>\n\t}\n\telse\n\t{\n\t\treturn <Multiplexer schema={schema}/>\n\t}\n}\n\nfunction TextInput({value,setValue})\n{\n\treturn <Input\n\t\tvalue={value}\n\t\tonChange={event=>{setValue(event.target.value)}}\n\t\t// className={classes.input}\n\t\tinputProps={{\n\t\t\t'aria-label': 'Description',\n\t\t}}/>\n}\nfunction NumberInput({value,setValue,step=.1})\n{\n\treturn <TextField\n\t\ttype=\"number\"\n\t\tvalue={value}\n\n\t\tinputProps={{ /*min: \"0\", max: \"10\",*/ step: step}}\n\t\tonChange={event=>{setValue(event.target.value)}}\n\t\t// className={classes.input}\n\t/>\n}\n\nfunction SelectInput({value,setValue,values=[]})\n{\n\treturn <Select value={{label: value}}\n\t\t\t\t   onChange={x=>setValue(x.value)}\n\t\t\t\t   options={values.map(key=>({value: key, label: key}))}\n\t/>\n}\n\nfunction BooleanInput({value,setValue})\n{\n\treturn <Switch\n\t\tchecked={Boolean(value)}\n\t\tonChange={event=>setValue(event.target.checked)}\n\t\tcolor=\"primary\"\n\t/>\n}\n\nfunction LeafModifier({schema})\n{\n\tlet onClick=function()\n\t{\n\t\tconst value=prompt(\"Enter the new value:\")\n\t\tif(value==null)\n\t\t\treturn//Canceled\n\t\telse\n\t\t{\n\t\t\tschema.set(value)\n\t\t}\n\t}\n\n\tconst checked=schema.config!==undefined\n\t// alert(\"ASOIJD\")\n\tlet input=<TextInput value={schema.config} setValue={schema.set}/>\n\tif(schema.type==='string')\n\t{\n\t\tinput=input//Default: text input\n\t}\n\telse if(schema.type==='boolean')\n\t{\n\t\tinput=<BooleanInput value={schema.config} setValue={schema.set}/>\n\t}\n\telse if(schema.type==='number')\n\t{\n\t\tinput=<NumberInput value={schema.config} setValue={schema.set}/>\n\t}\n\telse if(schema.type==='select')\n\t{\n\t\tinput=<SelectInput value={schema.config} values={schema.values} setValue={schema.set}/>\n\t}\n\tconsole.assert(input!==undefined)\n\treturn <div style={{padding: 20, paddingTop: 10, backgroundColor: 'rgba(255,255,255,.5)', borderRadius: 30, alignContent: 'center'}}>\n\t\t<Switch\n\t\t\tchecked={checked}\n\t\t\tdisabled={schema.path[0]==='initial'}\n\t\t\tonChange={event=>\n\t\t\t{\n\t\t\t\tconst checked=event.target.checked\n\t\t\t\tif(checked)/*alert(schema.state+'  '+schema.config)*/\n\t\t\t\tschema.set(checked ? schema.state : null)\n\t\t\t}}//if(!checked){schema.set(undefined)}else{console.assert(checked);setUsed(checked)}}}\n\t\t\tcolor=\"primary\"\n\t\t/>{checked ? \"(In delta)\" : \"(Not in delta)\"}<br/>\n\t\t{checked ? input : <div/>}\n\n\t</div>\n\n\t\t//\t\t   <Button\n\t\t//\tvariant=\"contained\" onClick={onClick}\n\t\t//\tsize=\"small\"\n\t\t//\t\t   >{'State: '+schema.state+'\\tConfig: '+schema.config/*schema.path+''*/}</Button>\n}\n\nlet oldStuff=undefined\nsetInterval(window.tryRefreshInstance,100)\nfunction tryRefreshInstance()\n{\n\tif(window.refreshInstance)\n\t\twindow.refreshInstance()\n}\nwindow.refreshInstance=undefined\nfunction GetSimpleGui()\n{\n\tconst labels               =[]\n\tlet [instance, setInstance]=useState({})\n\twindow.refreshInstance=()=>setInstance(window.getGuiArchitectureInstance())\n\ttimerEvents[0]             =()=>\n\t{\n\t\tlet stuff=window.gameWindow.getGuiArchitectureInstance.apply(window.gameWindow, [window.gameWindow.config])\n\t\tif(stuff!==oldStuff)\n\t\t{\n\t\t\tsetInstance(stuff)\n\t\t\toldStuff=stuff\n\t\t}\n\t}//This function is inefficient. It must be cleaned up asap. (it lists all possible controls...which is just STUPID (but also very easy to make))\n\n\tfor(const [index, i] of Object.entries(instance))\n\t{\n\t\tif(i.path.includes('color'))\n\t\t{\n\t\t\tlet onClick=function()\n\t\t\t{\n\t\t\t\tconst value=prompt(\"Enter the new value for \"+(i.path.join(' '))+\n\t\t\t\t\t\t\t\t\t   '\\n\\n at delta '+(i.delta)+'\\n\\nCurrent Value: '+i.valueInConfig)\n\t\t\t\tif(value==null)\n\t\t\t\t\treturn//Canceled\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tlet configString=localStorage.getItem('config')\n\t\t\t\t\tconfigString+='\\n'+'deltas\t'+i.delta+'\t'+i.path.join('\t')+' '+value\n\t\t\t\t\twindow.gameWindow.setConfigDjsonInLocalStorage(configString)\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet color  =i.valueInConfig===undefined ? \"primary\" : \"secondary\"\n\t\t\tlabels.push(<Button key={index}\n\t\t\t\t\t\t\t\tvariant=\"contained\" onClick={onClick}\n\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\tcolor={color}>\n\t\t\t\t{'deltas '+i.delta+' '+i.path.join(' ')}\n\t\t\t</Button>)\n\t\t}\n\t}\n\treturn <table style={{flexGrow: 4, display: 'flex', flexDirection: 'column'}}>\n\t\t{labels}\n\t</table>\n}\n\nfunction handleNewLab()\n{\n\tif(window.confirm('Are you sure you want to create a new lab (all progress will be lost)?'))\n\t{\n\t\twindow.setConfigDjsonInLocalStorage('')\n\t\twindow.refreshPage()\n\t}\n\n}\n\nwindow.gameWindow=undefined//Will be set to the 'window' element of the 'game.html' iframe\nconst timerEvents=[()=>{}]//Calls each one of these on a timer\nfunction doTimerEvents()\n{\n\tif(window.gameWindow!==undefined)//We're not ready yet: the game iframe has to finish loading first\n\t{\n\t\tconsole.log(\"HO\")\n\t\twindow.gameWindow.editorMode=true\n\t\tfor(const event of timerEvents)\n\t\t\tevent()\n\t}\n}\nsetInterval(doTimerEvents, 100)\n\nfunction handleLoadConfig(kwargs={})\n{\n\tconst {concat=false}=kwargs\n\tconst code=prompt('Please enter the 4 character code (case-sensitive) that you received when pressing \"Save Config\"')\n\tif(typeof code==='string' && code.length===4)\n\t{\n\t\twindow.loadConfigFromServer(code,{concat})\n\t}\n\telse if(!code)\n\t{\n\t\talert('Loading config from server cancelled.')\n\t}\n\telse\n\t{\n\t\talert('Please enter a four character code (you entered '+JSON.stringify(code)+', which has '+code.length+' characters)')\n\t\thandleLoadConfig()\n\t}\n}\n\nfunction viewMySaves()\n{\n\tconst saves=window.getMySaves()\n\tif(!saves.length)\n\t\twindow.alert('You currently have no saved labs.')\n\telse\n\t\twindow.alert(\"All of your saved file codes (bottom is most recent):\"+'\\n'+saves.join('\\n'))\n}\n\n\nfunction handleEditCode()\n{\n\tif(!__weAreInAnIframe__)//We are in an iframe\n\t{\n\t\tif(window.confirm('Are you sure you want to go to the code editor? (This option exists for mainly devs, such as Ryan Jenny and Rong)'))\n\t\t{\n\t\t\twindow.goToUrl('../Editor/index.html')\n\t\t}\n\t}\n\telse\n\t{\n\t\talert('You\\'re already in the code editor.')\n\t}\n}\n\nfunction handleHideEditorGui()\n{\n\tif(window.confirm('Are you sure you want to hide to the editor gui? (This will bring you to game.html)'))\n\t{\n\t\twindow.goToUrl('../game.html')\n\t}\n}\n\n\n//PART OF TODO TO MAKE LABS LOADABLE VIA URL\n// if(window.location.pathname.length=5)//In other words, if we have some 5 letter code\n\nasync function selectionDialog(promptText,selection)\n{\n\t//Will be replaced by HTML or something later\n\tconsole.assert(selection.length)\n\tconsole.assert(arguments.length===2,'Wrong number of arguments')\n\tlet out=prompt(promptText+'\\nPlease choose from these options (case sensitive):\\n'+selection)\n\tif(selection.includes(out))\n\t\treturn out\n\tif(!out)\n\t\treturn undefined\n\treturn selectionDialog(promptText,selection)\n}\n\nasync function conditionedInputDialog(promptText,instructionText,condition,conditionFailMessage=\"Bad input, please try again!\",cancelMessage=\"Cancelled input.\")\n{\n\t//TODO rewrite selectionDialog to use this function. this is copypasta trash.\n\t//condition is a boolean function that takes a user input string\n\t//An input that has to match a condition\n\t//Will be replaced by HTML or something later\n\tconsole.assert(arguments.length>=3,'Wrong number of arguments')\n\tlet out=prompt(promptText+'\\n'+instructionText)\n\tif(!out)\n\t{\n\t\talert(cancelMessage)\n\t\treturn undefined//user cancelled\n\t}\n\tif(condition(out))\n\t{\n\t\treturn out\n\t}\n\telse\n\t{\n\t\talert(conditionFailMessage)\n\t\treturn conditionedInputDialog(promptText,instructionText,condition,conditionFailMessage,cancelMessage)\n\t}\n}\n\nwindow.numbericInputDialog=async function (message,min=-1/0,max=1/0)//In javascript, 1/0 is positive infinity. -1/0 is negative infinity. Screw calculus, this is JS! (Sigh. At least I found a use for it?!)\n{\n\tfunction condition(input)\n\t{\n\t\ttry\n\t\t{\n\t\t\tinput=JSON.parse(input)\n\t\t\treturn typeof input==='number' && input<=max && input>=min\n\t\t}\n\t\tcatch(e)\n\t\t{\n\t\t\treturn false\n\t\t}\n\t}\n\treturn await conditionedInputDialog(message,\"Please enter any number between \"+min+\" and \"+max,condition)\n}\n\nfunction displayHelp(help)\n{\n\talert(help)\n}\n\nfunction Button(props)\n{\n\tlet out=<MaterialButton style={{margin:1,fontWeight:'bold'}}\n\t\t\t\t\t\t\t  variant=\"contained\"\n\t\t\t\t\t\t\t  size=\"small\"\n\t\t\t\t\t\t\t  {...props}>\n\t\t\t{props.children}\n\t\t</MaterialButton>\n\tif(props.helpLabel||props.helptext)\n\t{\n\t\tlet extraProps={}\n\t\tif(props.helptext)\n\t\t{\n\t\t\textraProps.onClick=()=>displayHelp(props.helptext)\n\t\t}\n\t\tlet title=<div style={{cursor:\"help\"}}{...extraProps}>\n\t\t\t<h3>\n\t\t\t\t{props.helpLabel || \"Help\"}\n\t\t\t</h3>\n\t\t</div>\n\t\tout=<Tooltip title={title}\n\t\t\t\t\t\t   placement=\"right\" interactive>\n\t\t\t{out}\n\t\t</Tooltip>\n\t}\n\treturn out\n}\n\n\nconst tools={\n\tasync pour()\n\t{\n\t\tconst firstItemID =await selectionDialog(\"Which item would you like to pour stuff from?\",window.allItemIdsWithTransform())\n\t\tconst secondItemID=await selectionDialog(\"Which item would you like to pour stuff into?\",window.allItemIdsWithTransform())\n\t\tconst pourDeltas_prefix=deltaDialog(\"What should the new animation sequence be called?\").trim()\n\t\talert(\"Implement pouring from \"+firstItemID+\" to \"+secondItemID)\n\t\tlet originalFirstItemRotation =window.deltas.soaked(window.items[firstItemID ], {transform: {rotation: {/*x: null, y: null, */z: null}}})\n\t\tlet originalFirstItemPosition =window.deltas.soaked(window.items[firstItemID ], {transform: {position: {x: null, y: null, z: null}}})\n\t\tlet firstItemRotation =window.deltas.soaked(window.items[firstItemID ], {transform: {rotation: {/*x: null, y: null,*/ z: null}}})//For the pouring delta\n\t\tlet secondItemPosition=window.deltas.soaked(window.items[secondItemID], {transform: {position: {x: null, y: null, z: null}}})//For the pouring delta\n\n\t\tsecondItemPosition.transform.position.y+=2\n\t\tfirstItemRotation.transform.rotation.z+=180\n\n\t\tlet pourDeltas_pick_up       =pourDeltas_prefix+'_0_pick_up'       .trim()//Trim just in case I put a space on the end by accident...\n\t\tlet pourDeltas_move_to_target=pourDeltas_prefix+'_1_move_to_target'.trim()//Trim just in case I put a space on the end by accident...\n\t\tlet pourDeltas_rotate        =pourDeltas_prefix+'_2_rotate'        .trim()//Trim just in case I put a space on the end by accident...\n\t\tlet pourDeltas_rotate_back   =pourDeltas_prefix+'_3_rotate_back'   .trim()//Trim just in case I put a space on the end by accident...\n\t\tlet pourDeltas_move_back     =pourDeltas_prefix+'_4_move_back'     .trim()//Trim just in case I put a space on the end by accident...\n\t\tlet pourDeltas_put_down      =pourDeltas_prefix+'_5_put_down'      .trim()//Trim just in case I put a space on the end by accident...\n\t\tfunction autoTo(deltaId)\n\t\t{\n\t\t\treturn {scene:{transitions:{auto:{delta:deltaId,time:1}}}}\n\t\t}\n\n\t\twindow.addLinesToConfigString(window.djson.stringify({\n\t\t\t\"\":\"Pouring \"+firstItemID+\" to \"+secondItemID+\" via delta \"+pourDeltas_prefix,//A comment\n\t\t\tdeltas:{\n\t\t\t\t[window.getMostRecentDeltaId()]: {\n\t\t\t\t\t// scene:{transitions:{drag:{[firstItem]:{[secondItem]:{delta:pourDeltas_pick_up,time:1}}}}}\n\t\t\t\t\tscene:{transitions:{drag:{[firstItemID]:{[secondItemID]:{delta:pourDeltas_move_to_target,time:1}}}}}\n\t\t\t\t},\n\t\t\t\t// [pourDeltas_pick_up]: {\n\t\t\t\t// \t[firstItem]: {transform:{position:{y:secondItemPosition.transform.position.y}}},\n\t\t\t\t// \t...autoTo(pourDeltas_move_to_target)\n\t\t\t\t// },\n\t\t\t\t[pourDeltas_move_to_target]: {\n\t\t\t\t\t[firstItemID]: secondItemPosition,\n\t\t\t\t\t...autoTo(pourDeltas_rotate)\n\t\t\t\t},\n\t\t\t\t[pourDeltas_rotate]: {\n\t\t\t\t\t[firstItemID]: firstItemRotation,\n\n\t\t\t\t\t...autoTo(pourDeltas_rotate_back)\n\t\t\t\t},\n\t\t\t\t[pourDeltas_rotate_back]: {\n\t\t\t\t\t[firstItemID]: originalFirstItemRotation,\n\t\t\t\t\t...autoTo(pourDeltas_put_down)\n\t\t\t\t\t// ...autoTo(pourDeltas_move_back)\n\t\t\t\t},\n\t\t\t\t// [pourDeltas_move_back]: {\n\t\t\t\t// \t[firstItem]: {transform:{position:{x:originalFirstItemPosition.transform.position.x,\n\t\t\t\t// \t\t\t\t                       z:originalFirstItemPosition.transform.position.z}}},\n\t\t\t\t// \t...autoTo(pourDeltas_put_down)\n\t\t\t\t// },\n\t\t\t\t[pourDeltas_put_down]: {\n\t\t\t\t\t[firstItemID]: originalFirstItemPosition\n\t\t\t\t}\n\t\t\t}\n\t\t}))\n\t},\n\tasync beakerPour()\n\t{\n\t\tconst firstItemID =await selectionDialog(\"Which item would you like to pour stuff from?\",window.allItemIdsOfType('simpleBeaker'))\n\t\tconst secondItemID=await selectionDialog(\"Which item would you like to pour stuff into?\",window.allItemIdsOfType('simpleBeaker'))\n\t\tconst pourDeltas_prefix=deltaDialog(\"What should the new animation sequence be called?\").trim()\n\t\tconst pourPercent=numbericInputDialog(\"What percent of \"+firstItemID+\"'s fluid should we pour?\",0,100)\n\t\talert(\"Implement pouring from \"+firstItemID+\" to \"+secondItemID)\n\t\tlet originalFirstItemRotation =window.deltas.soaked(window.items[firstItemID ], {transform: {rotation: {/*x: null, y: null, */z: null}}})\n\t\tlet originalFirstItemPosition =window.deltas.soaked(window.items[firstItemID ], {transform: {position: {x: null, y: null, z: null}}})\n\t\tlet firstItemRotation =window.deltas.soaked(window.items[firstItemID ], {transform: {rotation: {/*x: null, y: null,*/ z: null}}})//For the pouring delta\n\t\tlet secondItemPosition=window.deltas.soaked(window.items[secondItemID], {transform: {position: {x: null, y: null, z: null}}})//For the pouring delta\n\t\t// let firstFluidLevel=window.deltas.soaked(window.items[secondItem], {fluid:{transform: {position: {x: null, y: null, z: null}}}})//For the pouring delta\n\t\tlet firstFluidScaleY =window.items[firstItemID ].fluid.transform.scale.y//A number\n\t\tlet secondFluidScaleY=window.items[secondItemID].fluid.transform.scale.y//A number\n\t\tlet firstFluidScaleX =window.items[firstItemID ].fluid.transform.scale.x//A number\n\t\tlet secondFluidScaleX=window.items[secondItemID].fluid.transform.scale.x//A number\n\t\tlet firstFluidScaleZ =window.items[firstItemID ].fluid.transform.scale.z//A number\n\t\tlet secondFluidScaleZ=window.items[secondItemID].fluid.transform.scale.z//A number\n\t\tlet firstFluidVolume =firstFluidScaleY*firstFluidScaleX*firstFluidScaleZ//Forget pi its not important\n\t\tlet secondFluidVolume=firstFluidScaleY*firstFluidScaleX*firstFluidScaleZ//Forget pi its not important\n\n\t\tlet changeInLevels=pourPercent/100*firstFluidScaleY\n\t\tfirstFluidScaleY-=changeInLevels\n\t\tsecondFluidScaleY+=changeInLevels\n\n\t\tsecondItemPosition.transform.position.y+=2\n\t\tfirstItemRotation.transform.rotation.z+=180\n\n\t\tlet pourDeltas_pick_up       =pourDeltas_prefix+'_0_pick_up'       .trim()//Trim just in case I put a space on the end by accident...\n\t\tlet pourDeltas_move_to_target=pourDeltas_prefix+'_1_move_to_target'.trim()//Trim just in case I put a space on the end by accident...\n\t\tlet pourDeltas_rotate        =pourDeltas_prefix+'_2_rotate'        .trim()//Trim just in case I put a space on the end by accident...\n\t\tlet pourDeltas_fluid_exchange=pourDeltas_prefix+'_2_fluid_exchange'.trim()//Trim just in case I put a space on the end by accident...\n\t\tlet pourDeltas_rotate_back   =pourDeltas_prefix+'_3_rotate_back'   .trim()//Trim just in case I put a space on the end by accident...\n\t\tlet pourDeltas_move_back     =pourDeltas_prefix+'_4_move_back'     .trim()//Trim just in case I put a space on the end by accident...\n\t\tlet pourDeltas_put_down      =pourDeltas_prefix+'_5_put_down'      .trim()//Trim just in case I put a space on the end by accident...\n\t\tfunction autoTo(deltaId)\n\t\t{\n\t\t\treturn {scene:{transitions:{auto:{delta:deltaId,time:1}}}}\n\t\t}\n\n\t\twindow.addLinesToConfigString(window.djson.stringify({\n\t\t\t\"\":\"Pouring \"+firstItemID+\" to \"+secondItemID+\" via delta \"+pourDeltas_prefix,//A comment\n\t\t\tdeltas:{\n\t\t\t\t[window.getMostRecentDeltaId()]: {\n\t\t\t\t\t// scene:{transitions:{drag:{[firstItem]:{[secondItem]:{delta:pourDeltas_pick_up,time:1}}}}}\n\t\t\t\t\tscene:{transitions:{drag:{[firstItemID]:{[secondItemID]:{delta:pourDeltas_move_to_target,time:1}}}}}\n\t\t\t\t},\n\t\t\t\t// [pourDeltas_pick_up]: {\n\t\t\t\t// \t[firstItem]: {transform:{position:{y:secondItemPosition.transform.position.y}}},\n\t\t\t\t// \t...autoTo(pourDeltas_move_to_target)\n\t\t\t\t// },\n\t\t\t\t[pourDeltas_move_to_target]: {\n\t\t\t\t\t[firstItemID]: secondItemPosition,\n\t\t\t\t\t...autoTo(pourDeltas_rotate)\n\t\t\t\t},\n\t\t\t\t[pourDeltas_rotate]: {\n\t\t\t\t\t[firstItemID] : {fluid:{transform:{scale:{y:firstFluidScaleY }}}},\n\t\t\t\t\t[secondItemID]: {fluid:{transform:{scale:{y:secondFluidScaleY}}}},\n\t\t\t\t\t...autoTo(pourDeltas_fluid_exchange)\n\t\t\t\t},\n\t\t\t\t[pourDeltas_fluid_exchange]: {\n\t\t\t\t\t[firstItemID]: firstItemRotation,\n\t\t\t\t\t...autoTo(pourDeltas_rotate_back)\n\t\t\t\t},\n\t\t\t\t[pourDeltas_rotate_back]: {\n\t\t\t\t\t[firstItemID]: originalFirstItemRotation,\n\t\t\t\t\t...autoTo(pourDeltas_put_down)\n\t\t\t\t\t// ...autoTo(pourDeltas_move_back)\n\t\t\t\t},\n\t\t\t\t// [pourDeltas_move_back]: {\n\t\t\t\t// \t[firstItem]: {transform:{position:{x:originalFirstItemPosition.transform.position.x,\n\t\t\t\t// \t\t\t\t                       z:originalFirstItemPosition.transform.position.z}}},\n\t\t\t\t// \t...autoTo(pourDeltas_put_down)\n\t\t\t\t// },\n\t\t\t\t[pourDeltas_put_down]: {\n\t\t\t\t\t[firstItemID]: originalFirstItemPosition\n\t\t\t\t}\n\t\t\t}\n\t\t}))\n\t}\n}\n\nfunction toolsDialog()\n{\n\tasync function toolsDialog()\n\t{\n\t\tconst selectedTool=tools[await selectionDialog(\"Select a tool\",Object.keys(tools))]\n\t\tif(selectedTool)\n\t\t{\n\t\t\tselectedTool()\n\t\t}\n\t\telse\n\t\t{\n\t\t\talert(\"Cancelled using a tool\")\n\t\t}\n\t}\n\ttoolsDialog()\n}\n\nfunction viewState()\n{\n\talert(\"Current state:\\n\"+window.getSimplifiedStateDeltaStack())\n}\n\nfunction handlePopState()\n{\n\t// viewState()\n\tlet simplifiedStateDeltaStack=window.getSimplifiedStateDeltaStack()\n\tif(window.confirm(\"Would you like to pop \"+ simplifiedStateDeltaStack[simplifiedStateDeltaStack.length-1]+\" from the state stack?\\nCurrent state: \"+simplifiedStateDeltaStack))\n\t{\n\t\twindow.popDeltaIDFromStateStack()\n\t\twindow.setStateFromDeltaIDArray(window.getSimplifiedStateDeltaStack())\n\t\twindow.requestRender()\n\t}\n}\n\nfunction handlePushState()\n{\n\tasync function helper()\n\t{\n\t\t// viewState()\n\t\tlet simplifiedStateDeltaStack=window.getSimplifiedStateDeltaStack()\n\t\tlet deltaID              =await selectionDialog(\"Select a delta to push to the state:\", Object.keys(window.config.deltas))\n\t\tif(!deltaID)\n\t\t{\n\t\t\talert(\"Cancelled pushing delta to state\")\n\t\t\treturn\n\t\t}\n\t\twindow.pushDeltaIDToStateStack(deltaID)\n\t\t\twindow.setStateFromDeltaIDArray(window.getSimplifiedStateDeltaStack())\n\t\t\twindow.requestRender()\n\t}\n\thelper()\n}\n\n\n\nconst __weAreInAnIframe__=window.location !== window.parent.location\nfunction App()\n{\n\tfunction setGameWindow(x)\n\t{\n\t\twindow.gameWindow=x.contentWindow\n\t}\n\t//Lab\n\tconst [schema, setSchema]=useState(window.getDeltasGuiSchema())\n\twindow.refreshGuiSchema  =()=>setSchema(window.getDeltasGuiSchema())\n\tlet gameStyle            ={width: '100%', height: '100%', border: '0'}\n\t// noinspection HtmlUnknownTarget\n\n\treturn <div style={{display: 'flex', flexDirection: 'horizontal', width: '25%', height: '100%'}}>\n\t\t<div style={{padding: 10, border: 10, backgroundColor: 'rgba(255,255,255,.3)', flexGrow: 4, display: 'flex', flexDirection: 'column', overflowY: 'scroll', pointerEvents: 'auto'}}>\n\t\t\t<h1 style={{color: 'white', textAlign: 'center'}}>Lab<sup>3</sup></h1>\n\t\t\t<br/>\n\t\t\t{/*<ExpansionPanel style={{borderRadius:30, backgroundColor:'rgba(0,0,0,0)'}}>*/}\n\t\t\t\t{/*<ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>*/}\n\t\t\t\t\t{/*<Typography>Buttons</Typography>*/}\n\t\t\t\t{/*</ExpansionPanelSummary>*/}\n\t\t\t\t{/*<ExpansionPanelDetails>*/}\n\t\t\t\t\t{/*<Typography>*/}\n\t\t\t\t\t\t{/*Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex,*/}\n\t\t\t\t\t\t{/*sit amet blandit leo lobortis eget.*/}\n\t\t\t\t\t{/*</Typography>*/}\n\t\t\t\t{/*</ExpansionPanelDetails>*/}\n\t\t\t<Button                   onClick={handleEditCode                     } helptext=\"Edit the djson code manually (this is meant for devs)\"> Edit Djson Code </Button>\n\t\t\t<Button                   onClick={handleHideEditorGui                } helptext=\"Hide this settings bar, and make the game full-screen. Hit the back button on your browser put it back again.\"> Hide Editor Gui </Button>\n\t\t\t<Button color=\"secondary\" onClick={handleNewLab                       } helptext=\"Wipe all settings for this lab and start a new one.\"> New Lab         </Button>\n\t\t\t<Button color=\"secondary\" onClick={()=>window.saveConfigToServer()    } helptext=\"Save this lab's settings to the server (you'll get a four letter/number code, which you can find later by clicking 'View Saved Labs')\"> Save Lab        </Button>\n\t\t\t<Button color=\"secondary\" onClick={viewMySaves                        } helptext=\"View all labs saved from this computer\"> View Saved Labs </Button>\n\t\t\t<Button color=\"secondary\" onClick={handleLoadConfig                   } helptext=\"Load some game from an id (a secret four-letter/number code you get from clicking 'save lab')\"> Load Lab        </Button>\n\t\t\t<Button color=\"secondary\" onClick={()=>handleLoadConfig({concat:true})} helptext=\"Combine this lab game's settings with some other lab's game settings (which you specify with a four letter/number code gotten from having clicked 'Save Lab')\"> Combine Labs    </Button>\n\t\t\t<Button color=\"primary\"   onClick={window.undoEditorChange            } helptext=\"Undo the last change you made to this game's settings.\"> Undo            </Button>\n\t\t\t<Button color=\"primary\"   onClick={addItemDialogs                     } helptext=\"Add an item.\"> Add Item        </Button>\n\t\t\t<Button color=\"primary\"   onClick={addDeltaDialog                     } helptext=\"Add a delta.\"> Add Delta       </Button>\n\t\t\t<Button color=\"primary\"   onClick={toolsDialog                        } helptext=\"Tools let you do fancy things with little effort. Examples include pouring flasks etc.\"> Tools           </Button>\n\t\t\t<Button color=\"primary\"   onClick={viewState                          } helptext=\"The game state is a list of 'deltas'. Each time you trigger a transition, you add a delta to the game state (it will be added to the end of the 'state stack', which is the list you see when pressing this button.'\"> View State       </Button>\n\t\t\t<Button color=\"primary\"   onClick={handlePushState                    } helptext=\"Apply a delta to the current game state. You might want to do this while writing some delta that you haven't transitioned to yet.\"> Push State       </Button>\n\t\t\t<Button color=\"primary\"   onClick={handlePopState                     } helptext=\"Go back in time by one delta (undo the last transition). You can see this change by clicking 'View State'\"> Pop State       </Button>\n\t\t\t{/*</ExpansionPanel>*/}\n\t\t\t<br/>\n\t\t\t<div style={{width:'100%'}}>\n\t\t\t\t<Schema schema={schema}/>\n\t\t\t </div>\n\t\t</div>\n\t</div>\n}\ndocument.addEventListener(\"DOMContentLoaded\", function(event)\n{\n\tReactDOM.render(<App/>, document.getElementById('root'))\n\t// Your code to run since DOM is loaded and ready\n})\n"]},"metadata":{},"sourceType":"module"}